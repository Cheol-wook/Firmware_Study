
GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000001f0  00000264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000276  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000994  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000082b  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033a  00000000  00000000  000014c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001804  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ff  00000000  00000000  00001838  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000025a  00000000  00000000  00001c37  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001e91  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ef       	ldi	r30, 0xF0	; 240
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	9b c0       	rjmp	.+310    	; 0x1ec <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:

#define F_CPU 7432800UL
#include <avr/io.h>
#include <util/delay.h>

int main(){
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	cd b7       	in	r28, 0x3d	; 61
  be:	de b7       	in	r29, 0x3e	; 62
  c0:	62 97       	sbiw	r28, 0x12	; 18
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	f8 94       	cli
  c6:	de bf       	out	0x3e, r29	; 62
  c8:	0f be       	out	0x3f, r0	; 63
  ca:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0x0F;
  d0:	8f e0       	ldi	r24, 0x0F	; 15
  d2:	84 bb       	out	0x14, r24	; 20
	
	//PORTC = 0x00;
	
	unsigned char FND_DATA[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d,
  d4:	8a e0       	ldi	r24, 0x0A	; 10
  d6:	e0 e0       	ldi	r30, 0x00	; 0
  d8:	f1 e0       	ldi	r31, 0x01	; 1
  da:	de 01       	movw	r26, r28
  dc:	11 96       	adiw	r26, 0x01	; 1
  de:	01 90       	ld	r0, Z+
  e0:	0d 92       	st	X+, r0
  e2:	8a 95       	dec	r24
  e4:	e1 f7       	brne	.-8      	; 0xde <main+0x26>
								0x27, 0x7f, 0x6f};
	
	unsigned int Light[] = {
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	ea e0       	ldi	r30, 0x0A	; 10
  ea:	f1 e0       	ldi	r31, 0x01	; 1
  ec:	de 01       	movw	r26, r28
  ee:	1b 96       	adiw	r26, 0x0b	; 11
  f0:	01 90       	ld	r0, Z+
  f2:	0d 92       	st	X+, r0
  f4:	8a 95       	dec	r24
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x38>
		0b00001101,
		0b00001011,
		0b00000111
	};
	
	int num = 0;
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	30 e0       	ldi	r19, 0x00	; 0
	int num2 = 0;
	
	while(1){
		num2 = num;

		PORTC = Light[3];
  fc:	89 89       	ldd	r24, Y+17	; 0x11
  fe:	85 bb       	out	0x15, r24	; 21
		PORTA = FND_DATA[(num2%10)];
 100:	ea e0       	ldi	r30, 0x0A	; 10
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	c9 01       	movw	r24, r18
 106:	bf 01       	movw	r22, r30
 108:	4a d0       	rcall	.+148    	; 0x19e <__divmodhi4>
 10a:	a1 e0       	ldi	r26, 0x01	; 1
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	ac 0f       	add	r26, r28
 110:	bd 1f       	adc	r27, r29
 112:	a8 0f       	add	r26, r24
 114:	b9 1f       	adc	r27, r25
 116:	8c 91       	ld	r24, X
 118:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	82 e4       	ldi	r24, 0x42	; 66
 11c:	97 e0       	ldi	r25, 0x07	; 7
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x66>
		_delay_ms(1);
		num2 /=10;
		PORTC = Light[2];
 122:	8f 85       	ldd	r24, Y+15	; 0x0f
 124:	85 bb       	out	0x15, r24	; 21
		PORTA = FND_DATA[(num2%10)];
 126:	cb 01       	movw	r24, r22
 128:	bf 01       	movw	r22, r30
 12a:	39 d0       	rcall	.+114    	; 0x19e <__divmodhi4>
 12c:	a1 e0       	ldi	r26, 0x01	; 1
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	ac 0f       	add	r26, r28
 132:	bd 1f       	adc	r27, r29
 134:	a8 0f       	add	r26, r24
 136:	b9 1f       	adc	r27, r25
 138:	8c 91       	ld	r24, X
 13a:	8b bb       	out	0x1b, r24	; 27
 13c:	82 e4       	ldi	r24, 0x42	; 66
 13e:	97 e0       	ldi	r25, 0x07	; 7
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <main+0x88>
		_delay_ms(1);
		num2 /= 10;
 144:	c9 01       	movw	r24, r18
 146:	64 e6       	ldi	r22, 0x64	; 100
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	29 d0       	rcall	.+82     	; 0x19e <__divmodhi4>
 14c:	cb 01       	movw	r24, r22
		PORTC = Light[1];
 14e:	4d 85       	ldd	r20, Y+13	; 0x0d
		PORTA = FND_DATA[(num2%10)];
 150:	45 bb       	out	0x15, r20	; 21
 152:	bf 01       	movw	r22, r30
 154:	24 d0       	rcall	.+72     	; 0x19e <__divmodhi4>
 156:	a1 e0       	ldi	r26, 0x01	; 1
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	ac 0f       	add	r26, r28
 15c:	bd 1f       	adc	r27, r29
 15e:	a8 0f       	add	r26, r24
 160:	b9 1f       	adc	r27, r25
 162:	8c 91       	ld	r24, X
 164:	8b bb       	out	0x1b, r24	; 27
 166:	82 e4       	ldi	r24, 0x42	; 66
 168:	97 e0       	ldi	r25, 0x07	; 7
 16a:	01 97       	sbiw	r24, 0x01	; 1
		_delay_ms(1);
		num2 /= 10;
 16c:	f1 f7       	brne	.-4      	; 0x16a <main+0xb2>
 16e:	c9 01       	movw	r24, r18
 170:	68 ee       	ldi	r22, 0xE8	; 232
 172:	73 e0       	ldi	r23, 0x03	; 3
 174:	14 d0       	rcall	.+40     	; 0x19e <__divmodhi4>
		PORTC = Light[0];
 176:	cb 01       	movw	r24, r22
 178:	4b 85       	ldd	r20, Y+11	; 0x0b
		PORTA = FND_DATA[(num2%10)];
 17a:	45 bb       	out	0x15, r20	; 21
 17c:	bf 01       	movw	r22, r30
 17e:	0f d0       	rcall	.+30     	; 0x19e <__divmodhi4>
 180:	e1 e0       	ldi	r30, 0x01	; 1
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	ec 0f       	add	r30, r28
 186:	fd 1f       	adc	r31, r29
 188:	e8 0f       	add	r30, r24
 18a:	f9 1f       	adc	r31, r25
 18c:	80 81       	ld	r24, Z
 18e:	8b bb       	out	0x1b, r24	; 27
 190:	82 e4       	ldi	r24, 0x42	; 66
 192:	97 e0       	ldi	r25, 0x07	; 7
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <main+0xdc>
		_delay_ms(1);
		num2 /= 10;
		
		num++;		
 198:	2f 5f       	subi	r18, 0xFF	; 255
 19a:	3f 4f       	sbci	r19, 0xFF	; 255
 19c:	af cf       	rjmp	.-162    	; 0xfc <main+0x44>

0000019e <__divmodhi4>:
 19e:	97 fb       	bst	r25, 7
 1a0:	07 2e       	mov	r0, r23
 1a2:	16 f4       	brtc	.+4      	; 0x1a8 <__divmodhi4+0xa>
 1a4:	00 94       	com	r0
 1a6:	06 d0       	rcall	.+12     	; 0x1b4 <__divmodhi4_neg1>
 1a8:	77 fd       	sbrc	r23, 7
 1aa:	08 d0       	rcall	.+16     	; 0x1bc <__divmodhi4_neg2>
 1ac:	0b d0       	rcall	.+22     	; 0x1c4 <__udivmodhi4>
 1ae:	07 fc       	sbrc	r0, 7
 1b0:	05 d0       	rcall	.+10     	; 0x1bc <__divmodhi4_neg2>
 1b2:	3e f4       	brtc	.+14     	; 0x1c2 <__divmodhi4_exit>

000001b4 <__divmodhi4_neg1>:
 1b4:	90 95       	com	r25
 1b6:	81 95       	neg	r24
 1b8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ba:	08 95       	ret

000001bc <__divmodhi4_neg2>:
 1bc:	70 95       	com	r23
 1be:	61 95       	neg	r22
 1c0:	7f 4f       	sbci	r23, 0xFF	; 255

000001c2 <__divmodhi4_exit>:
 1c2:	08 95       	ret

000001c4 <__udivmodhi4>:
 1c4:	aa 1b       	sub	r26, r26
 1c6:	bb 1b       	sub	r27, r27
 1c8:	51 e1       	ldi	r21, 0x11	; 17
 1ca:	07 c0       	rjmp	.+14     	; 0x1da <__udivmodhi4_ep>

000001cc <__udivmodhi4_loop>:
 1cc:	aa 1f       	adc	r26, r26
 1ce:	bb 1f       	adc	r27, r27
 1d0:	a6 17       	cp	r26, r22
 1d2:	b7 07       	cpc	r27, r23
 1d4:	10 f0       	brcs	.+4      	; 0x1da <__udivmodhi4_ep>
 1d6:	a6 1b       	sub	r26, r22
 1d8:	b7 0b       	sbc	r27, r23

000001da <__udivmodhi4_ep>:
 1da:	88 1f       	adc	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	5a 95       	dec	r21
 1e0:	a9 f7       	brne	.-22     	; 0x1cc <__udivmodhi4_loop>
 1e2:	80 95       	com	r24
 1e4:	90 95       	com	r25
 1e6:	bc 01       	movw	r22, r24
 1e8:	cd 01       	movw	r24, r26
 1ea:	08 95       	ret

000001ec <_exit>:
 1ec:	f8 94       	cli

000001ee <__stop_program>:
 1ee:	ff cf       	rjmp	.-2      	; 0x1ee <__stop_program>
